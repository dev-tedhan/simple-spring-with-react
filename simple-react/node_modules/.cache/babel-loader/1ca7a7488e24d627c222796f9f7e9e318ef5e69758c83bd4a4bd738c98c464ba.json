{"ast":null,"code":"var _jsxFileName = \"/Users/ted/dev/web/simple/simple-react/src/containers/Welcome/WelcomeContainer.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport Welcome from \"../../components/Welcome/Welcome\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction WelcomeContainer() {\n  _s();\n  // 상태: 시간 문자열, 날짜 문자열, 인사말 메시지\n  const [userName, setUserName] = useState(\"한동석\");\n  const [currentTime, setCurrentTime] = useState(\"\");\n  const [currentDate, setCurrentDate] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  // 사용자 이름 (여기선 하드코딩, 실제론 props 또는 API 등으로 받음)\n  // const userName = \"한동석\";\n\n  useEffect(() => {\n    const fetchData = async () => {\n      // const response = await fetch(\"http://simple-spring:10000/api/members/name\");\n      // const name = await response.text();\n      // setUserName(name);\n    };\n    fetchData();\n  }, []);\n\n  // 시간 업데이트 함수\n  const updateTime = () => {\n    const now = new Date();\n\n    // 시간 포맷팅\n    const hours = now.getHours();\n    const hh = String(hours).padStart(2, \"0\");\n    const mm = String(now.getMinutes()).padStart(2, \"0\");\n    const ss = String(now.getSeconds()).padStart(2, \"0\");\n    setCurrentTime(`${hh}:${mm}:${ss}`);\n\n    // 날짜 포맷팅\n    const year = now.getFullYear();\n    const month = String(now.getMonth() + 1).padStart(2, \"0\");\n    const date = String(now.getDate()).padStart(2, \"0\");\n    const days = [\"일\", \"월\", \"화\", \"수\", \"목\", \"금\", \"토\"];\n    const dayName = days[now.getDay()];\n    setCurrentDate(`${year}년 ${month}월 ${date}일 ${dayName}요일`);\n\n    // 인사말 업데이트\n    if (hours >= 5 && hours < 12) {\n      setMessage(\"상쾌한 아침입니다!\");\n    } else if (hours >= 12 && hours < 17) {\n      setMessage(\"활기찬 오후 되세요!\");\n    } else if (hours >= 17 && hours < 21) {\n      setMessage(\"편안한 저녁 보내세요!\");\n    } else {\n      setMessage(\"오늘도 좋은 하루 보내셨나요?\");\n    }\n  };\n\n  // 환영 애니메이션 상태 (opacity, translateY)\n  const [animateStyle, setAnimateStyle] = useState({\n    opacity: 0,\n    transform: \"translateY(20px)\",\n    transition: \"all 0.6s ease-out\"\n  });\n\n  // 컴포넌트 마운트 시 초기화 + 인터벌 설정\n  useEffect(() => {\n    updateTime();\n\n    // 애니메이션 시작 (다음 프레임에 스타일 변경)\n    requestAnimationFrame(() => {\n      setAnimateStyle(prev => ({\n        ...prev,\n        opacity: 1,\n        transform: \"translateY(0)\"\n      }));\n    });\n    const intervalId = setInterval(updateTime, 1000);\n    return () => clearInterval(intervalId);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: animateStyle,\n    children: /*#__PURE__*/_jsxDEV(Welcome, {\n      userName: userName,\n      message: message,\n      currentTime: currentTime,\n      currentDate: currentDate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n_s(WelcomeContainer, \"tYBAC21fGV0wZtI/3zVh1wuXuJ8=\");\n_c = WelcomeContainer;\nexport default WelcomeContainer;\nvar _c;\n$RefreshReg$(_c, \"WelcomeContainer\");","map":{"version":3,"names":["useEffect","useState","Welcome","jsxDEV","_jsxDEV","WelcomeContainer","_s","userName","setUserName","currentTime","setCurrentTime","currentDate","setCurrentDate","message","setMessage","fetchData","updateTime","now","Date","hours","getHours","hh","String","padStart","mm","getMinutes","ss","getSeconds","year","getFullYear","month","getMonth","date","getDate","days","dayName","getDay","animateStyle","setAnimateStyle","opacity","transform","transition","requestAnimationFrame","prev","intervalId","setInterval","clearInterval","style","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ted/dev/web/simple/simple-react/src/containers/Welcome/WelcomeContainer.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport Welcome from \"../../components/Welcome/Welcome\";\n\nfunction WelcomeContainer() {\n  // 상태: 시간 문자열, 날짜 문자열, 인사말 메시지\n  const [userName, setUserName] = useState(\"한동석\");\n  const [currentTime, setCurrentTime] = useState(\"\");\n  const [currentDate, setCurrentDate] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  // 사용자 이름 (여기선 하드코딩, 실제론 props 또는 API 등으로 받음)\n  // const userName = \"한동석\";\n\n  useEffect(() => {\n    const fetchData = async () => {\n      // const response = await fetch(\"http://simple-spring:10000/api/members/name\");\n      // const name = await response.text();\n      // setUserName(name);\n    };\n\n    fetchData();\n  }, []);\n\n  // 시간 업데이트 함수\n  const updateTime = () => {\n    const now = new Date();\n\n    // 시간 포맷팅\n    const hours = now.getHours();\n    const hh = String(hours).padStart(2, \"0\");\n    const mm = String(now.getMinutes()).padStart(2, \"0\");\n    const ss = String(now.getSeconds()).padStart(2, \"0\");\n    setCurrentTime(`${hh}:${mm}:${ss}`);\n\n    // 날짜 포맷팅\n    const year = now.getFullYear();\n    const month = String(now.getMonth() + 1).padStart(2, \"0\");\n    const date = String(now.getDate()).padStart(2, \"0\");\n    const days = [\"일\", \"월\", \"화\", \"수\", \"목\", \"금\", \"토\"];\n    const dayName = days[now.getDay()];\n    setCurrentDate(`${year}년 ${month}월 ${date}일 ${dayName}요일`);\n\n    // 인사말 업데이트\n    if (hours >= 5 && hours < 12) {\n      setMessage(\"상쾌한 아침입니다!\");\n    } else if (hours >= 12 && hours < 17) {\n      setMessage(\"활기찬 오후 되세요!\");\n    } else if (hours >= 17 && hours < 21) {\n      setMessage(\"편안한 저녁 보내세요!\");\n    } else {\n      setMessage(\"오늘도 좋은 하루 보내셨나요?\");\n    }\n  };\n\n  // 환영 애니메이션 상태 (opacity, translateY)\n  const [animateStyle, setAnimateStyle] = useState({\n    opacity: 0,\n    transform: \"translateY(20px)\",\n    transition: \"all 0.6s ease-out\",\n  });\n\n  // 컴포넌트 마운트 시 초기화 + 인터벌 설정\n  useEffect(() => {\n    updateTime();\n\n    // 애니메이션 시작 (다음 프레임에 스타일 변경)\n    requestAnimationFrame(() => {\n      setAnimateStyle((prev) => ({\n        ...prev,\n        opacity: 1,\n        transform: \"translateY(0)\",\n      }));\n    });\n\n    const intervalId = setInterval(updateTime, 1000);\n    return () => clearInterval(intervalId);\n  }, []);\n\n  return (\n    <div style={animateStyle}>\n      <Welcome\n        userName={userName}\n        message={message}\n        currentTime={currentTime}\n        currentDate={currentDate}\n      />\n    </div>\n  );\n}\n\nexport default WelcomeContainer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}