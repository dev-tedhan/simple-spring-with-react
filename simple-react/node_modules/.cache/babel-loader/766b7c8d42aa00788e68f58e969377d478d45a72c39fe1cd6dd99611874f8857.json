{"ast":null,"code":"import{useEffect,useState}from\"react\";import Welcome from\"../../components/Welcome/Welcome\";import{jsx as _jsx}from\"react/jsx-runtime\";function WelcomeContainer(){// 상태: 시간 문자열, 날짜 문자열, 인사말 메시지\nconst[currentTime,setCurrentTime]=useState(\"\");const[currentDate,setCurrentDate]=useState(\"\");const[message,setMessage]=useState(\"\");// 사용자 이름 (여기선 하드코딩, 실제론 props 또는 API 등으로 받음)\nconst userName=\"한동석\";// 시간 업데이트 함수\nconst updateTime=()=>{const now=new Date();// 시간 포맷팅\nconst hours=now.getHours();const hh=String(hours).padStart(2,\"0\");const mm=String(now.getMinutes()).padStart(2,\"0\");const ss=String(now.getSeconds()).padStart(2,\"0\");setCurrentTime(`${hh}:${mm}:${ss}`);// 날짜 포맷팅\nconst year=now.getFullYear();const month=String(now.getMonth()+1).padStart(2,\"0\");const date=String(now.getDate()).padStart(2,\"0\");const days=[\"일\",\"월\",\"화\",\"수\",\"목\",\"금\",\"토\"];const dayName=days[now.getDay()];setCurrentDate(`${year}년 ${month}월 ${date}일 ${dayName}요일`);// 인사말 업데이트\nif(hours>=5&&hours<12){setMessage(\"상쾌한 아침입니다!\");}else if(hours>=12&&hours<17){setMessage(\"활기찬 오후 되세요!\");}else if(hours>=17&&hours<21){setMessage(\"편안한 저녁 보내세요!\");}else{setMessage(\"오늘도 좋은 하루 보내셨나요?\");}};// 환영 애니메이션 상태 (opacity, translateY)\nconst[animateStyle,setAnimateStyle]=useState({opacity:0,transform:\"translateY(20px)\",transition:\"all 0.6s ease-out\"});// 컴포넌트 마운트 시 초기화 + 인터벌 설정\nuseEffect(()=>{updateTime();// 애니메이션 시작 (다음 프레임에 스타일 변경)\nrequestAnimationFrame(()=>{setAnimateStyle(prev=>({...prev,opacity:1,transform:\"translateY(0)\"}));});const intervalId=setInterval(updateTime,1000);return()=>clearInterval(intervalId);},[]);return/*#__PURE__*/_jsx(\"div\",{style:animateStyle,children:/*#__PURE__*/_jsx(Welcome,{userName:userName,message:message,currentTime:currentTime,currentDate:currentDate})});}export default WelcomeContainer;","map":{"version":3,"names":["useEffect","useState","Welcome","jsx","_jsx","WelcomeContainer","currentTime","setCurrentTime","currentDate","setCurrentDate","message","setMessage","userName","updateTime","now","Date","hours","getHours","hh","String","padStart","mm","getMinutes","ss","getSeconds","year","getFullYear","month","getMonth","date","getDate","days","dayName","getDay","animateStyle","setAnimateStyle","opacity","transform","transition","requestAnimationFrame","prev","intervalId","setInterval","clearInterval","style","children"],"sources":["/Users/ted/dev/web/react/workspace/simple/src/containers/Welcome/WelcomeContainer.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport Welcome from \"../../components/Welcome/Welcome\";\n\nfunction WelcomeContainer() {\n  // 상태: 시간 문자열, 날짜 문자열, 인사말 메시지\n  const [currentTime, setCurrentTime] = useState(\"\");\n  const [currentDate, setCurrentDate] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  // 사용자 이름 (여기선 하드코딩, 실제론 props 또는 API 등으로 받음)\n  const userName = \"한동석\";\n\n  // 시간 업데이트 함수\n  const updateTime = () => {\n    const now = new Date();\n\n    // 시간 포맷팅\n    const hours = now.getHours();\n    const hh = String(hours).padStart(2, \"0\");\n    const mm = String(now.getMinutes()).padStart(2, \"0\");\n    const ss = String(now.getSeconds()).padStart(2, \"0\");\n    setCurrentTime(`${hh}:${mm}:${ss}`);\n\n    // 날짜 포맷팅\n    const year = now.getFullYear();\n    const month = String(now.getMonth() + 1).padStart(2, \"0\");\n    const date = String(now.getDate()).padStart(2, \"0\");\n    const days = [\"일\", \"월\", \"화\", \"수\", \"목\", \"금\", \"토\"];\n    const dayName = days[now.getDay()];\n    setCurrentDate(`${year}년 ${month}월 ${date}일 ${dayName}요일`);\n\n    // 인사말 업데이트\n    if (hours >= 5 && hours < 12) {\n      setMessage(\"상쾌한 아침입니다!\");\n    } else if (hours >= 12 && hours < 17) {\n      setMessage(\"활기찬 오후 되세요!\");\n    } else if (hours >= 17 && hours < 21) {\n      setMessage(\"편안한 저녁 보내세요!\");\n    } else {\n      setMessage(\"오늘도 좋은 하루 보내셨나요?\");\n    }\n  };\n\n  // 환영 애니메이션 상태 (opacity, translateY)\n  const [animateStyle, setAnimateStyle] = useState({\n    opacity: 0,\n    transform: \"translateY(20px)\",\n    transition: \"all 0.6s ease-out\",\n  });\n\n  // 컴포넌트 마운트 시 초기화 + 인터벌 설정\n  useEffect(() => {\n    updateTime();\n\n    // 애니메이션 시작 (다음 프레임에 스타일 변경)\n    requestAnimationFrame(() => {\n      setAnimateStyle((prev) => ({\n        ...prev,\n        opacity: 1,\n        transform: \"translateY(0)\",\n      }));\n    });\n\n    const intervalId = setInterval(updateTime, 1000);\n    return () => clearInterval(intervalId);\n  }, []);\n\n  return (\n    <div style={animateStyle}>\n      <Welcome\n        userName={userName}\n        message={message}\n        currentTime={currentTime}\n        currentDate={currentDate}\n      />\n    </div>\n  );\n}\n\nexport default WelcomeContainer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}